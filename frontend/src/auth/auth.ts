export type Role = 'admin' | 'employee'

export type User = {
  id: string
  email: string
  passwordHash: string
  role: Role
  verified: boolean
}

export type PendingCode = {
  email: string
  code: string
  expiresAt: number
}

const LS = {
  users: 'auth_users',
  session: 'auth_session',
  code: 'auth_code',
}

function getUsers(): User[] {
  try { 
    if (typeof window === 'undefined' || !window.localStorage) return []
    return JSON.parse(localStorage.getItem(LS.users) || '[]') 
  } catch { return [] }
}
function setUsers(users: User[]) {
  try {
    if (typeof window === 'undefined' || !window.localStorage) return
    localStorage.setItem(LS.users, JSON.stringify(users))
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', e)
  }
}
function hash(s: string) {
  // why: –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ –¥–µ–ª–∞–µ–º –ø—Ä–æ—Å—Ç–µ–π—à–∏–π hash; –≤ –ø—Ä–æ–¥–µ ‚Äî bcrpyt/argon2 –Ω–∞ –±—ç–∫–µ
  let h = 0; for (let i = 0; i < s.length; i++) h = (h << 5) - h + s.charCodeAt(i) | 0
  return String(h)
}

export function currentUser(): User | null {
  try { 
    if (typeof window === 'undefined' || !window.localStorage) return null
    return JSON.parse(localStorage.getItem(LS.session) || 'null') 
  } catch { return null }
}
function setSession(u: User | null) {
  try {
    if (typeof window === 'undefined' || !window.localStorage) return
    if (u) localStorage.setItem(LS.session, JSON.stringify(u))
    else localStorage.removeItem(LS.session)
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', e)
  }
}

export function register(email: string, password: string, role: Role): { ok: true } | { ok: false, error: string, code?: string } {
  const users = getUsers()
  if (users.some(u => u.email.toLowerCase() === email.toLowerCase())) {
    return { ok: false, error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' }
  }
  const u: User = {
    id: `u_${Date.now()}`,
    email,
    passwordHash: hash(password),
    role,
    verified: false
  }
  users.push(u); setUsers(users)
  const code = issueCode(email)
  // –∏–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–¥–∞ "–Ω–∞ –ø–æ—á—Ç—É": –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  return { ok: true }
}

export function login(email: string, password: string): { ok: true } | { ok: false, error: string } {
  console.log('üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞:', { email, password: '***' })
  const users = getUsers()
  console.log('üë• –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', users)
  
  const u = users.find(x => x.email.toLowerCase() === email.toLowerCase())
  console.log('üîç –ù–∞–π–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', u)
  
  if (!u) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return { ok: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' }
  }
  
  const passwordHash = hash(password)
  console.log('üîë –•–µ—à –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è:', passwordHash)
  console.log('üîë –•–µ—à –≤ –±–∞–∑–µ:', u.passwordHash)
  console.log('‚úÖ –•–µ—à–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç:', u.passwordHash === passwordHash)
  
  if (u.passwordHash !== passwordHash) {
    console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å')
    return { ok: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' }
  }
  
  if (!u.verified) {
    console.log('‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω')
    return { ok: false, error: '–ê–∫–∫–∞—É–Ω—Ç –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ e-mail –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥.' }
  }
  
  console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥')
  setSession(u)
  return { ok: true }
}

export function logout() { setSession(null) }

export function issueCode(email: string): string {
  const code = String(Math.floor(100000 + Math.random()*900000))
  const expiresAt = Date.now() + 10 * 60 * 1000
  const payload: PendingCode = { email, code, expiresAt }
  try {
    if (typeof window !== 'undefined' && window.localStorage) {
      localStorage.setItem(LS.code, JSON.stringify(payload))
    }
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–∞:', e)
  }
  return code
}

export function verifyCode(email: string, code: string): { ok: true } | { ok: false, error: string } {
  try {
    if (typeof window === 'undefined' || !window.localStorage) {
      return { ok: false, error: 'localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' }
    }
    
    const raw = localStorage.getItem(LS.code)
    if (!raw) return { ok: false, error: '–ö–æ–¥ –Ω–µ –∑–∞–ø—Ä–æ—à–µ–Ω' }
    const payload: PendingCode = JSON.parse(raw)
    if (payload.email.toLowerCase() !== email.toLowerCase()) return { ok: false, error: '–î—Ä—É–≥–æ–π e-mail' }
    if (Date.now() > payload.expiresAt) return { ok: false, error: '–ö–æ–¥ –∏—Å—Ç—ë–∫' }
    if (payload.code !== code) return { ok: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥' }

    const users = getUsers()
    const i = users.findIndex(u => u.email.toLowerCase() === email.toLowerCase())
    if (i === -1) return { ok: false, error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' }
    users[i].verified = true
    setUsers(users)
    localStorage.removeItem(LS.code)
    setSession(users[i])
    return { ok: true }
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–æ–¥–∞:', e)
    return { ok: false, error: '–û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏' }
  }
}

export function getSession(): User | null { return currentUser() }

export function requireRole(u: User | null, role: Role): boolean {
  if (!u) return false
  return role === 'admin' ? u.role === 'admin' : true
}

export function canEditRow(u: User | null, ownerId?: string): boolean {
  if (!u) return false
  if (u.role === 'admin') return true
  return !!ownerId && ownerId === u.id
}

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export function initializeMockUsers(): void {
  try {
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–∫–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å localStorage
    if (typeof window === 'undefined' || !window.localStorage) {
      console.log('‚ö†Ô∏è localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é')
      return
    }
    
    const users = getUsers()
    console.log('üìä –¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ localStorage:', users)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    if (users.length > 0) {
      console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –º–æ–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
      return
    }

    const mockUsers: User[] = [
      {
        id: 'admin_001',
        email: 'admin@crm.com',
        passwordHash: hash('admin123'),
        role: 'admin',
        verified: true
      },
      {
        id: 'emp_001',
        email: 'ivan.petrov@crm.com',
        passwordHash: hash('employee123'),
        role: 'employee',
        verified: true
      },
      {
        id: 'emp_002',
        email: 'maria.sidorova@crm.com',
        passwordHash: hash('employee123'),
        role: 'employee',
        verified: true
      },
      {
        id: 'emp_003',
        email: 'alex.kuznetsov@crm.com',
        passwordHash: hash('employee123'),
        role: 'employee',
        verified: true
      }
    ]

    setUsers(mockUsers)
    console.log('‚úÖ –ú–æ–∫–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã:')
    console.log('üëë –ê–¥–º–∏–Ω: admin@crm.com / admin123 (hash:', hash('admin123'), ')')
    console.log('üë§ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ 1: ivan.petrov@crm.com / employee123 (hash:', hash('employee123'), ')')
    console.log('üë§ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ 2: maria.sidorova@crm.com / employee123')
    console.log('üë§ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ 3: alex.kuznetsov@crm.com / employee123')
    console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ localStorage:', JSON.stringify(mockUsers, null, 2))
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–∫–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error)
  }
}
