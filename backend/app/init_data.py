"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
from sqlalchemy.orm import Session
from .database import SessionLocal, engine, Base
from .models.user import User, UserRole
from .services.auth import AuthService


def init_test_users(db: Session):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    test_users = [
        {
            "id": "u_admin",
            "email": "admin@crm.com",
            "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            "password": "admin123",
            "role": UserRole.ADMIN,
            "verified": True
        },
        {
            "id": "u_ivan",
            "email": "ivan.petrov@crm.com",
            "name": "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
            "password": "employee123",
            "role": UserRole.EMPLOYEE,
            "verified": True
        },
        {
            "id": "u_maria",
            "email": "maria.sidorova@crm.com",
            "name": "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞",
            "password": "employee123",
            "role": UserRole.EMPLOYEE,
            "verified": True
        },
        {
            "id": "u_alex",
            "email": "alex.kuznetsov@crm.com",
            "name": "–ê–ª–µ–∫—Å–µ–π –ö—É–∑–Ω–µ—Ü–æ–≤",
            "password": "employee123",
            "role": UserRole.EMPLOYEE,
            "verified": True
        }
    ]
    
    for user_data in test_users:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing = db.query(User).filter(User.email == user_data["email"]).first()
        if existing:
            print(f"‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            continue
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User(
            id=user_data["id"],
            email=user_data["email"],
            name=user_data["name"],
            hashed_password=AuthService.get_password_hash(user_data["password"]),
            role=user_data["role"],
            verified=user_data["verified"]
        )
        
        db.add(user)
        print(f"‚úì –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data['name']} ({user_data['email']})")
    
    db.commit()
    print("\n‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    Base.metadata.create_all(bind=engine)
    print("‚úì –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    db = SessionLocal()
    try:
        init_test_users(db)
    finally:
        db.close()
    
    print("\nüìù –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
    print("  üëë admin@crm.com / admin123 (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)")
    print("  üë§ ivan.petrov@crm.com / employee123 (–°–æ—Ç—Ä—É–¥–Ω–∏–∫)")
    print("  üë§ maria.sidorova@crm.com / employee123 (–°–æ—Ç—Ä—É–¥–Ω–∏–∫)")
    print("  üë§ alex.kuznetsov@crm.com / employee123 (–°–æ—Ç—Ä—É–¥–Ω–∏–∫)")


if __name__ == "__main__":
    main()

